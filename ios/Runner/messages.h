// Autogenerated from Pigeon (v22.5.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, FLTState) {
  FLTStatePending = 0,
  FLTStateSuccess = 1,
  FLTStateError = 2,
};

/// Wrapper for FLTState to allow for nullability.
@interface FLTStateBox : NSObject
@property(nonatomic, assign) FLTState value;
- (instancetype)initWithValue:(FLTState)value;
@end

@class FLTStateResult;

@interface FLTStateResult : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithErrorMessage:(nullable NSString *)errorMessage
    state:(FLTState)state;
@property(nonatomic, copy, nullable) NSString * errorMessage;
@property(nonatomic, assign) FLTState state;
@end

/// The codec used by all APIs.
NSObject<FlutterMessageCodec> *FLTGetMessagesCodec(void);

@protocol FLTExampleApi
///
/// ドキュメントは全プラットフォームに反映されます
///
- (void)exampleWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)openUrlUrl:(NSString *)url error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable FLTStateResult *)queryStateWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)getTokenWithCompletion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
@end

extern void SetUpFLTExampleApi(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FLTExampleApi> *_Nullable api);

extern void SetUpFLTExampleApiWithSuffix(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FLTExampleApi> *_Nullable api, NSString *messageChannelSuffix);


@interface FLTExample2Api : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger messageChannelSuffix:(nullable NSString *)messageChannelSuffix;
- (void)handleUriUri:(NSString *)uri completion:(void (^)(FlutterError *_Nullable))completion;
@end

NS_ASSUME_NONNULL_END
